{"Constants": {"ay_center_0": {"dim": 1, "values": [-3.747269868850708]},
               "ay_center_1": {"dim": 1, "values": [-0.28388628363609314]},
               "ay_center_2": {"dim": 1, "values": [3.179497241973877]},
               "ay_center_3": {"dim": 1, "values": [6.642880916595459]}},
 "Functions": {"FFuzzify29": {"centers": [-0.3245462443934415,
                                          3.6042770373580395],
                              "dim_out": {"dim": 2},
                              "functions": "Triangular",
                              "names": "Triangular"},
               "FFuzzify30": {"centers": [-3.7472697844131804,
                                          -0.2838862759433485,
                                          3.1794972325264834,
                                          6.642880740996316],
                              "dim_out": {"dim": 4},
                              "functions": "Triangular",
                              "names": "Triangular"},
               "FParamFun28": {"code": "def long_corr_lat_local(accy,accy_0,  # inputs\n                    k1,k2          # learnable parameter \n                  ):\n  return k1+ k2*(accy - accy_0)\n",
                               "in_dim": [{"dim": 1, "sw": 15},
                                          {"dim": 1},
                                          {"dim": [1, 1]},
                                          {"dim": [1, 1]}],
                               "map_over_dim": false,
                               "n_input": 4,
                               "name": "long_corr_lat_local",
                               "params_and_consts": []},
               "FParamFun45": {"code": "def acc_model_based(Ty,v,F_y,delta,\n                    r1,mass,Kd,Cv,Cr,Iw1):  # learnable parameter\n    # function inputs:\n    # Ty,v --> wheel torques and vehicle speed\n\n    # learnable parameters:\n    # r1,mass,Kd,Cv,Cr,Iw1 --> wheel radius,vehicle mass, aero drag, linear drag and rolling resistance coefficients, wheel inertia\n\n    # non-trainable parameters\n    g_acc     = 9.81       # [m/s^2] gravity acceleration\n\n    # function output: longitudinal acceleration, computed using the Newton's vehicle dynamics laws \n    return ((1.0/mass)*( 2*(Ty/r1) - Kd * v**2 - Cv * v - F_y*torch.sin(delta)) - Cr*g_acc)/(1.0 + (2.0/mass)*(2*(Iw1/r1**2.0)))\n",
                               "in_dim": [{"dim": 1, "sw": 1},
                                          {"dim": 1, "sw": 1},
                                          {"dim": 1, "sw": 1},
                                          {"dim": 1, "sw": 1}],
                               "map_over_dim": false,
                               "n_input": 4,
                               "name": "acc_model_based",
                               "params_and_consts": ["r1",
                                                     "mass",
                                                     "Kd",
                                                     "Cv",
                                                     "Cr",
                                                     "Iw1"]},
               "FParamFun6": {"code": "def acc_pos(T):\n    mask_pos = torch.gt(T,0)\n    return torch.mul(T,mask_pos)\n",
                              "in_dim": [{"dim": 1, "sw": 15}],
                              "map_over_dim": false,
                              "n_input": 1,
                              "name": "acc_pos",
                              "params_and_consts": []},
               "FParamFun7": {"code": "def acc_neg(T):\n    mask_pos = torch.gt(T,0)\n    return torch.mul(T,~mask_pos)\n",
                              "in_dim": [{"dim": 1, "sw": 15}],
                              "map_over_dim": false,
                              "n_input": 1,
                              "name": "acc_neg",
                              "params_and_consts": []}},
 "Info": {"SampleTime": 1,
          "nnodely_version": "1.5.1",
          "ns": [15, 1],
          "ntot": 16,
          "num_parameters": 384},
 "Inputs": {"acc": {"dim": 1, "ns": [0, 1], "ntot": 1, "sw": [0, 1]},
            "accy": {"dim": 1, "ns": [15, 0], "ntot": 15, "sw": [-15, 0]},
            "crt": {"dim": 1, "ns": [15, 0], "ntot": 15, "sw": [-15, 0]},
            "delta": {"dim": 1, "ns": [1, 0], "ntot": 1, "sw": [-1, 0]},
            "vel": {"dim": 1, "ns": [15, 0], "ntot": 15, "sw": [-15, 0]}},
 "Minimizers": {"acc_error": {"A": "SamplePart73",
                              "B": "ParamFun71",
                              "loss": "rmse"}},
 "Models": "acc",
 "Outputs": {"acceleration": "ParamFun71"},
 "Parameters": {"Cr": {"dim": [1, 1],
                       "init_values": [[9.999999747378752e-05]],
                       "values": [[0.029306642711162567]]},
                "Cv": {"dim": [1, 1],
                       "init_values": [[9.999999747378752e-05]],
                       "values": [[-0.0024820356629788876]]},
                "Iw1": {"dim": [1, 1],
                        "init_values": [[9.999999747378752e-05]],
                        "values": [[-0.16982752084732056]]},
                "Kd": {"dim": [1, 1],
                       "init_values": [[9.999999747378752e-05]],
                       "values": [[-0.6459060907363892]]},
                "PFir13W": {"dim": 10,
                            "init_fun": {"code": "def init_negexp(indexes, params_size, dict_param = {'size_index':0, 'first_value':1, 'lambda':3}):\n    '''\n    Initializes parameters using a negative decay exponential function.\n\n    Parameters\n    ----------\n    indexes : list\n        List of indexes for the parameters.\n    params_size : list\n        List of sizes for each dimension of the parameters.\n    dict_param : dict, optional\n        Dictionary containing the initialization parameters. Default is {'size_index': 0, 'first_value': 1, 'lambda': 3}.\n            size_index : int\n                The index of the dimension to apply the exponential function.\n            first_value : int or float\n                The value at the start of the range.\n            lambda : int or float\n                The decay rate parameter of the exponential function.\n    '''\n    import numpy as np\n    size_index = dict_param['size_index']\n    # check if the size of the list of parameters is 1, to avoid a division by zero\n    x = 1 if params_size[size_index]-1 == 0 else indexes[size_index]/(params_size[size_index]-1)\n    return dict_param['first_value']*np.exp(-dict_param['lambda']*(1-x))\n",
                                         "name": "init_negexp",
                                         "params": {"first_value": 0.0001,
                                                    "lambda": 3,
                                                    "size_index": 0}},
                            "sw": 15,
                            "values": [[-0.33347374200820923,
                                        1.1086188554763794,
                                        -0.31386134028434753,
                                        -0.3595244884490967,
                                        0.9262774586677551,
                                        -0.4021029770374298,
                                        -0.7076130509376526,
                                        0.16946835815906525,
                                        -0.23909400403499603,
                                        -0.23163491487503052],
                                       [0.3212943375110626,
                                        0.1940331757068634,
                                        0.3201446533203125,
                                        0.32880136370658875,
                                        0.09269297868013382,
                                        -0.03559402376413345,
                                        0.21960647404193878,
                                        -0.6386223435401917,
                                        0.34570610523223877,
                                        0.36285147070884705],
                                       [-0.004527782555669546,
                                        -1.5505632162094116,
                                        -0.06565691530704498,
                                        -0.00541698420420289,
                                        -1.4170291423797607,
                                        0.6250160932540894,
                                        0.4042796492576599,
                                        -0.2392428070306778,
                                        0.00631555262953043,
                                        -0.06498811393976212],
                                       [-0.27565258741378784,
                                        -2.1114299297332764,
                                        -0.21204346418380737,
                                        -0.2842944264411926,
                                        -1.598764419555664,
                                        1.0187335014343262,
                                        0.256574809551239,
                                        0.5206806063652039,
                                        -0.17231181263923645,
                                        -0.20536011457443237],
                                       [0.25431928038597107,
                                        -1.9064422845840454,
                                        0.31291231513023376,
                                        0.24042139947414398,
                                        -1.3789700269699097,
                                        0.8650073409080505,
                                        0.25258657336235046,
                                        0.3087189793586731,
                                        0.034080930054187775,
                                        -0.02719299867749214],
                                       [0.34578657150268555,
                                        0.08826129883527756,
                                        0.404989629983902,
                                        0.31460729241371155,
                                        0.25296804308891296,
                                        1.467301845550537,
                                        -0.29711759090423584,
                                        -1.2140724658966064,
                                        -0.1204247996211052,
                                        -0.12148018181324005],
                                       [0.050097838044166565,
                                        0.04553738608956337,
                                        -0.006006911862641573,
                                        0.07178397476673126,
                                        0.11081258952617645,
                                        4.2096734046936035,
                                        0.34232690930366516,
                                        -2.575620412826538,
                                        0.09881666302680969,
                                        0.14397773146629333],
                                       [0.03086567297577858,
                                        -0.2126016914844513,
                                        -0.09515354782342911,
                                        -0.014421257190406322,
                                        -0.7785727381706238,
                                        3.8067636489868164,
                                        -0.2227115035057068,
                                        -0.04593285545706749,
                                        -0.06579430401325226,
                                        -0.08125974982976913],
                                       [-0.8480698466300964,
                                        -0.6331167221069336,
                                        -1.1379574537277222,
                                        -0.8403225541114807,
                                        -0.9188259840011597,
                                        3.8805184364318848,
                                        0.3647681474685669,
                                        2.5000686645507812,
                                        0.27330055832862854,
                                        0.24553513526916504],
                                       [-0.353362500667572,
                                        -0.2331436723470688,
                                        -0.26303020119667053,
                                        -0.33586862683296204,
                                        0.052169058471918106,
                                        4.657686710357666,
                                        -0.3689594864845276,
                                        2.54931640625,
                                        -0.33716318011283875,
                                        -0.29763832688331604],
                                       [-0.07312438637018204,
                                        -0.17157630622386932,
                                        0.1319177746772766,
                                        0.009212413802742958,
                                        0.1037490963935852,
                                        4.23930549621582,
                                        0.10213910788297653,
                                        2.9711365699768066,
                                        0.2289026826620102,
                                        0.2203713059425354],
                                       [-0.5878210067749023,
                                        -0.49680957198143005,
                                        0.16063207387924194,
                                        -0.6580034494400024,
                                        0.9031477570533752,
                                        4.226175308227539,
                                        -0.33704832196235657,
                                        3.103760004043579,
                                        -0.2837103009223938,
                                        -0.2902308404445648],
                                       [-0.4286089539527893,
                                        -0.44111180305480957,
                                        -0.22910362482070923,
                                        -0.4666655361652374,
                                        0.5665655136108398,
                                        4.632370471954346,
                                        0.0682768002152443,
                                        3.138988971710205,
                                        0.1297156661748886,
                                        0.10856375098228455],
                                       [0.0027687831316143274,
                                        -0.1739695966243744,
                                        -0.9720062017440796,
                                        -0.1093025654554367,
                                        -1.3881117105484009,
                                        2.8107798099517822,
                                        0.3343643844127655,
                                        4.006181240081787,
                                        0.20371395349502563,
                                        0.29597580432891846],
                                       [0.21653488278388977,
                                        0.25043758749961853,
                                        -1.3852777481079102,
                                        0.29582467675209045,
                                        -4.898697376251221,
                                        7.303806781768799,
                                        0.13905957341194153,
                                        1.1640502214431763,
                                        0.20025750994682312,
                                        0.1724800318479538]]},
                "PFir13b": {"dim": 10,
                            "init_fun": {"code": "def init_negexp(indexes, params_size, dict_param = {'size_index':0, 'first_value':1, 'lambda':3}):\n    '''\n    Initializes parameters using a negative decay exponential function.\n\n    Parameters\n    ----------\n    indexes : list\n        List of indexes for the parameters.\n    params_size : list\n        List of sizes for each dimension of the parameters.\n    dict_param : dict, optional\n        Dictionary containing the initialization parameters. Default is {'size_index': 0, 'first_value': 1, 'lambda': 3}.\n            size_index : int\n                The index of the dimension to apply the exponential function.\n            first_value : int or float\n                The value at the start of the range.\n            lambda : int or float\n                The decay rate parameter of the exponential function.\n    '''\n    import numpy as np\n    size_index = dict_param['size_index']\n    # check if the size of the list of parameters is 1, to avoid a division by zero\n    x = 1 if params_size[size_index]-1 == 0 else indexes[size_index]/(params_size[size_index]-1)\n    return dict_param['first_value']*np.exp(-dict_param['lambda']*(1-x))\n",
                                         "name": "init_negexp",
                                         "params": {"first_value": 0.0001,
                                                    "lambda": 3,
                                                    "size_index": 0}},
                            "values": [-0.06624048203229904,
                                       -0.0928121954202652,
                                       -0.07575538754463196,
                                       -0.05878635123372078,
                                       -0.00566711975261569,
                                       0.1335865706205368,
                                       0.0041068852879107,
                                       0.12429171055555344,
                                       0.007990486919879913,
                                       -0.00030040545971132815]},
                "PFir41W": {"dim": 1,
                            "init_fun": {"code": "def init_negexp(indexes, params_size, dict_param = {'size_index':0, 'first_value':1, 'lambda':3}):\n    '''\n    Initializes parameters using a negative decay exponential function.\n\n    Parameters\n    ----------\n    indexes : list\n        List of indexes for the parameters.\n    params_size : list\n        List of sizes for each dimension of the parameters.\n    dict_param : dict, optional\n        Dictionary containing the initialization parameters. Default is {'size_index': 0, 'first_value': 1, 'lambda': 3}.\n            size_index : int\n                The index of the dimension to apply the exponential function.\n            first_value : int or float\n                The value at the start of the range.\n            lambda : int or float\n                The decay rate parameter of the exponential function.\n    '''\n    import numpy as np\n    size_index = dict_param['size_index']\n    # check if the size of the list of parameters is 1, to avoid a division by zero\n    x = 1 if params_size[size_index]-1 == 0 else indexes[size_index]/(params_size[size_index]-1)\n    return dict_param['first_value']*np.exp(-dict_param['lambda']*(1-x))\n",
                                         "name": "init_negexp",
                                         "params": {"first_value": 0.0001,
                                                    "lambda": 5,
                                                    "monotonicity": "increasing",
                                                    "size_index": 0}},
                            "sw": 15,
                            "values": [[1.4373853206634521],
                                       [1.3948063850402832],
                                       [-0.2449563592672348],
                                       [0.24890846014022827],
                                       [0.7415782809257507],
                                       [0.591096818447113],
                                       [0.14564526081085205],
                                       [0.3328034281730652],
                                       [0.4708772599697113],
                                       [0.12818543612957],
                                       [-1.0666500329971313],
                                       [-1.0506577491760254],
                                       [-1.0138901472091675],
                                       [-2.699045181274414],
                                       [-3.7163889408111572]]},
                "PFir43W": {"dim": 1,
                            "init_fun": {"code": "def init_negexp(indexes, params_size, dict_param = {'size_index':0, 'first_value':1, 'lambda':3}):\n    '''\n    Initializes parameters using a negative decay exponential function.\n\n    Parameters\n    ----------\n    indexes : list\n        List of indexes for the parameters.\n    params_size : list\n        List of sizes for each dimension of the parameters.\n    dict_param : dict, optional\n        Dictionary containing the initialization parameters. Default is {'size_index': 0, 'first_value': 1, 'lambda': 3}.\n            size_index : int\n                The index of the dimension to apply the exponential function.\n            first_value : int or float\n                The value at the start of the range.\n            lambda : int or float\n                The decay rate parameter of the exponential function.\n    '''\n    import numpy as np\n    size_index = dict_param['size_index']\n    # check if the size of the list of parameters is 1, to avoid a division by zero\n    x = 1 if params_size[size_index]-1 == 0 else indexes[size_index]/(params_size[size_index]-1)\n    return dict_param['first_value']*np.exp(-dict_param['lambda']*(1-x))\n",
                                         "name": "init_negexp",
                                         "params": {"first_value": 0.0001,
                                                    "lambda": 5,
                                                    "monotonicity": "increasing",
                                                    "size_index": 0}},
                            "sw": 15,
                            "values": [[-1.868748426437378],
                                       [-1.230101227760315],
                                       [-1.4878499507904053],
                                       [-1.3190491199493408],
                                       [-1.0094586610794067],
                                       [-0.8286485075950623],
                                       [-0.8167160749435425],
                                       [-0.7472206950187683],
                                       [-0.43074628710746765],
                                       [0.19859188795089722],
                                       [0.8917762041091919],
                                       [2.0601723194122314],
                                       [2.5987727642059326],
                                       [2.1073532104492188],
                                       [2.119034767150879]]},
                "PFir8W": {"dim": 10,
                           "init_fun": {"code": "def init_negexp(indexes, params_size, dict_param = {'size_index':0, 'first_value':1, 'lambda':3}):\n    '''\n    Initializes parameters using a negative decay exponential function.\n\n    Parameters\n    ----------\n    indexes : list\n        List of indexes for the parameters.\n    params_size : list\n        List of sizes for each dimension of the parameters.\n    dict_param : dict, optional\n        Dictionary containing the initialization parameters. Default is {'size_index': 0, 'first_value': 1, 'lambda': 3}.\n            size_index : int\n                The index of the dimension to apply the exponential function.\n            first_value : int or float\n                The value at the start of the range.\n            lambda : int or float\n                The decay rate parameter of the exponential function.\n    '''\n    import numpy as np\n    size_index = dict_param['size_index']\n    # check if the size of the list of parameters is 1, to avoid a division by zero\n    x = 1 if params_size[size_index]-1 == 0 else indexes[size_index]/(params_size[size_index]-1)\n    return dict_param['first_value']*np.exp(-dict_param['lambda']*(1-x))\n",
                                        "name": "init_negexp",
                                        "params": {"first_value": 0.0001,
                                                   "lambda": 3,
                                                   "size_index": 0}},
                           "sw": 15,
                           "values": [[0.7130535840988159,
                                       -0.02371739037334919,
                                       -0.0223441980779171,
                                       -3.1672661304473877,
                                       -0.008396020159125328,
                                       1.20327889919281,
                                       -0.03378112241625786,
                                       -0.023153532296419144,
                                       0.7378641366958618,
                                       -0.018237609416246414],
                                      [-0.2202760875225067,
                                       0.016556372866034508,
                                       0.004150938242673874,
                                       -0.5859603881835938,
                                       0.011560014449059963,
                                       0.12077651172876358,
                                       0.016073353588581085,
                                       0.020717473700642586,
                                       0.34179607033729553,
                                       0.013013248331844807],
                                      [0.13334685564041138,
                                       0.01192451361566782,
                                       0.0032964698038995266,
                                       -0.3955410420894623,
                                       -0.0008839362999424338,
                                       -0.09833183884620667,
                                       0.0051974826492369175,
                                       -0.0010443080682307482,
                                       -0.3290685713291168,
                                       0.0015344638377428055],
                                      [-0.30779096484184265,
                                       0.008478906936943531,
                                       0.003945170436054468,
                                       0.9792237877845764,
                                       0.0023221371229737997,
                                       0.17372062802314758,
                                       0.0013065800303593278,
                                       -0.0012092231772840023,
                                       0.20139887928962708,
                                       0.00505808787420392],
                                      [-0.10340601205825806,
                                       0.004937388468533754,
                                       0.0029700594022870064,
                                       -0.006432472728192806,
                                       0.016165323555469513,
                                       -0.2585834860801697,
                                       0.002704006154090166,
                                       0.014355182647705078,
                                       -0.5843309760093689,
                                       0.00756128178909421],
                                      [0.22240124642848969,
                                       -0.0043609668500721455,
                                       -0.016472086310386658,
                                       0.12399236857891083,
                                       -0.016675038263201714,
                                       -0.06346561014652252,
                                       -0.014941281639039516,
                                       -0.004146778490394354,
                                       -0.24929936230182648,
                                       -0.01933922804892063],
                                      [-0.03307703137397766,
                                       0.004364795982837677,
                                       0.00815988052636385,
                                       -0.7292919158935547,
                                       0.0075552621856331825,
                                       -0.19712309539318085,
                                       0.012744526378810406,
                                       0.011310458183288574,
                                       -0.5478595495223999,
                                       0.00769938575103879],
                                      [-0.07232175767421722,
                                       -0.016432320699095726,
                                       -0.0034705812577158213,
                                       0.01574002206325531,
                                       -0.011142760515213013,
                                       0.353912889957428,
                                       -0.01077090110629797,
                                       -0.022743910551071167,
                                       0.6382338404655457,
                                       -0.010899308137595654],
                                      [0.07018405944108963,
                                       -0.02147677354514599,
                                       -0.019502155482769012,
                                       0.05506369471549988,
                                       -0.0168241448700428,
                                       -0.09591444581747055,
                                       -0.0192517451941967,
                                       -0.019519435241818428,
                                       1.051522135734558,
                                       -0.023355934768915176],
                                      [-0.09873520582914352,
                                       -0.002518081571906805,
                                       0.004100924823433161,
                                       -0.22915904223918915,
                                       0.004519715905189514,
                                       -0.17242911458015442,
                                       0.018220264464616776,
                                       0.0047273472882807255,
                                       0.1338164508342743,
                                       0.00726490281522274],
                                      [0.05748213082551956,
                                       0.008910003118216991,
                                       0.010213915258646011,
                                       0.2535552382469177,
                                       0.010975141078233719,
                                       0.10706470906734467,
                                       0.00917463842779398,
                                       0.006174074485898018,
                                       -1.1336255073547363,
                                       0.00954519398510456],
                                      [0.046096235513687134,
                                       0.025293802842497826,
                                       0.02527189441025257,
                                       -0.7230167984962463,
                                       0.01834794320166111,
                                       0.030791599303483963,
                                       0.015474412590265274,
                                       0.018099164590239525,
                                       -2.1191444396972656,
                                       0.014360344968736172],
                                      [-0.4327726364135742,
                                       0.015225210227072239,
                                       0.007903027348220348,
                                       0.7243818640708923,
                                       0.014763860031962395,
                                       -0.00420317891985178,
                                       0.01710517704486847,
                                       0.01612253114581108,
                                       -0.008279611356556416,
                                       0.010719097219407558],
                                      [0.5483989119529724,
                                       0.0004985147388651967,
                                       0.00029155411175452173,
                                       1.0054137706756592,
                                       -0.003144352464005351,
                                       -0.8211568593978882,
                                       0.0007787943468429148,
                                       0.004749563056975603,
                                       -0.7554211616516113,
                                       -0.003683840623125434],
                                      [0.10955973714590073,
                                       0.06504697352647781,
                                       0.08943969756364822,
                                       0.2758876383304596,
                                       0.07927149534225464,
                                       1.9361817836761475,
                                       0.07666606456041336,
                                       0.08245571702718735,
                                       5.381936550140381,
                                       0.08687540888786316]]},
                "PFir8b": {"dim": 10,
                           "init_fun": {"code": "def init_negexp(indexes, params_size, dict_param = {'size_index':0, 'first_value':1, 'lambda':3}):\n    '''\n    Initializes parameters using a negative decay exponential function.\n\n    Parameters\n    ----------\n    indexes : list\n        List of indexes for the parameters.\n    params_size : list\n        List of sizes for each dimension of the parameters.\n    dict_param : dict, optional\n        Dictionary containing the initialization parameters. Default is {'size_index': 0, 'first_value': 1, 'lambda': 3}.\n            size_index : int\n                The index of the dimension to apply the exponential function.\n            first_value : int or float\n                The value at the start of the range.\n            lambda : int or float\n                The decay rate parameter of the exponential function.\n    '''\n    import numpy as np\n    size_index = dict_param['size_index']\n    # check if the size of the list of parameters is 1, to avoid a division by zero\n    x = 1 if params_size[size_index]-1 == 0 else indexes[size_index]/(params_size[size_index]-1)\n    return dict_param['first_value']*np.exp(-dict_param['lambda']*(1-x))\n",
                                        "name": "init_negexp",
                                        "params": {"first_value": 0.0001,
                                                   "lambda": 3,
                                                   "size_index": 0}},
                           "values": [-0.4372425079345703,
                                      -0.11370623111724854,
                                      -0.12360183149576187,
                                      0.7643013596534729,
                                      -0.12123273313045502,
                                      -1.2397109270095825,
                                      -0.12092258036136627,
                                      -0.12204846739768982,
                                      1.1789201498031616,
                                      -0.1200246587395668]},
                "PLinear11W": {"dim": [10, 1],
                               "values": [[0.27746230363845825],
                                          [0.7418962121009827],
                                          [0.7464442849159241],
                                          [0.211716890335083],
                                          [0.7241779565811157],
                                          [0.21304745972156525],
                                          [0.7287308573722839],
                                          [0.7196764349937439],
                                          [0.21735253930091858],
                                          [0.720615804195404]]},
                "PLinear16W": {"dim": [10, 1],
                               "values": [[0.2370540201663971],
                                          [0.23930539190769196],
                                          [0.25281503796577454],
                                          [0.23901286721229553],
                                          [0.34213703870773315],
                                          [0.9763320684432983],
                                          [0.19313593208789825],
                                          [0.7250321507453918],
                                          [0.14629393815994263],
                                          [0.15876099467277527]]},
                "k1_0": {"dim": [1, 1],
                         "init_values": [[9.999999747378752e-06]],
                         "values": [[0.4033912718296051]]},
                "k1_1": {"dim": [1, 1],
                         "init_values": [[9.999999747378752e-06]],
                         "values": [[-1.8045847415924072]]},
                "k1_2": {"dim": [1, 1],
                         "init_values": [[9.999999747378752e-06]],
                         "values": [[3.1260478496551514]]},
                "k1_3": {"dim": [1, 1],
                         "init_values": [[9.999999747378752e-06]],
                         "values": [[2.715376615524292]]},
                "k2_0": {"dim": [1, 1],
                         "init_values": [[9.999999747378752e-06]],
                         "values": [[1.2701811790466309]]},
                "k2_1": {"dim": [1, 1],
                         "init_values": [[9.999999747378752e-06]],
                         "values": [[1.2589577436447144]]},
                "k2_2": {"dim": [1, 1],
                         "init_values": [[9.999999747378752e-06]],
                         "values": [[-0.32185134291648865]]},
                "k2_3": {"dim": [1, 1],
                         "init_values": [[9.999999747378752e-06]],
                         "values": [[-1.0742125511169434]]},
                "mass": {"dim": [1, 1],
                         "init_values": [[3.5]],
                         "values": [[2.8823440074920654]]},
                "r1": {"dim": [1, 1],
                       "init_values": [[0.004999999888241291]],
                       "values": [[-0.27365368604660034]]}},
 "Relations": {"Add56": ["Add", ["Mul28", "Mul37"]],
               "Add57": ["Add", ["Add56", "Mul46"]],
               "Add58": ["Add", ["Add57", "Mul55"]],
               "Add65": ["Add", ["Fir61", "Fir64"]],
               "Add66": ["Add", ["Linear8", "Linear11"]],
               "Fir6": ["Fir", ["ParamFun2"], "PFir8W", "PFir8b", 0.05],
               "Fir61": ["Fir", ["Mul60"], "PFir41W", null, 0],
               "Fir64": ["Fir", ["Mul63"], "PFir43W", null, 0],
               "Fir9": ["Fir", ["ParamFun5"], "PFir13W", "PFir13b", 0.05],
               "Fuzzify14": ["Fuzzify", ["SamplePart13"], "FFuzzify29"],
               "Fuzzify17": ["Fuzzify", ["SamplePart16"], "FFuzzify30"],
               "Linear11": ["Linear", ["Tanh10"], "PLinear16W", null, 0],
               "Linear8": ["Linear", ["Tanh7"], "PLinear11W", null, 0],
               "Mul28": ["Mul", ["ParamFun20", "Select27"]],
               "Mul37": ["Mul", ["ParamFun29", "Select36"]],
               "Mul46": ["Mul", ["ParamFun38", "Select45"]],
               "Mul55": ["Mul", ["ParamFun47", "Select54"]],
               "Mul60": ["Mul", ["Add58", "Select59"]],
               "Mul63": ["Mul", ["Add58", "Select62"]],
               "ParamFun2": ["ParamFun", ["SamplePart1"], "FParamFun6"],
               "ParamFun20": ["ParamFun",
                              ["SamplePart19", "ay_center_0", "k1_0", "k2_0"],
                              "FParamFun28"],
               "ParamFun29": ["ParamFun",
                              ["SamplePart19", "ay_center_1", "k1_1", "k2_1"],
                              "FParamFun28"],
               "ParamFun38": ["ParamFun",
                              ["SamplePart19", "ay_center_2", "k1_2", "k2_2"],
                              "FParamFun28"],
               "ParamFun47": ["ParamFun",
                              ["SamplePart19", "ay_center_3", "k1_3", "k2_3"],
                              "FParamFun28"],
               "ParamFun5": ["ParamFun", ["SamplePart4"], "FParamFun7"],
               "ParamFun71": ["ParamFun",
                              ["Add66",
                               "SamplePart68",
                               "Add65",
                               "SamplePart70"],
                              "FParamFun45"],
               "SamplePart1": ["SamplePart", ["crt"], -1, [-15, 0]],
               "SamplePart13": ["SamplePart", ["vel"], -1, [-15, 0]],
               "SamplePart16": ["SamplePart", ["accy"], -1, [-15, 0]],
               "SamplePart19": ["SamplePart", ["accy"], -1, [-15, 0]],
               "SamplePart4": ["SamplePart", ["crt"], -1, [-15, 0]],
               "SamplePart68": ["SamplePart", ["vel"], -1, [-1, 0]],
               "SamplePart70": ["SamplePart", ["delta"], -1, [-1, 0]],
               "SamplePart73": ["SamplePart", ["acc"], -1, [0, 1]],
               "Select27": ["Select", ["Fuzzify17"], 4, 0],
               "Select36": ["Select", ["Fuzzify17"], 4, 1],
               "Select45": ["Select", ["Fuzzify17"], 4, 2],
               "Select54": ["Select", ["Fuzzify17"], 4, 3],
               "Select59": ["Select", ["Fuzzify14"], 2, 0],
               "Select62": ["Select", ["Fuzzify14"], 2, 1],
               "Tanh10": ["Tanh", ["Fir9"]],
               "Tanh7": ["Tanh", ["Fir6"]]}}